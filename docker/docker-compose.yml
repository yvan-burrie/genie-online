version: '3.5'

services:
    nginx:
        build:
            context: .
            dockerfile: nginx/Dockerfile
        depends_on:
            - php
            - pma
            - redis
        container_name: ${COMPOSE_PROJECT_NAME}_nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ..:/var/www/html:delegated

    apache:
        build:
            context: .
            dockerfile: apache/Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}_apache
        depends_on:
            - php
            - pma
            - redis
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ..:/var/www/html:delegated

    php:
        build: &php_build
            context: .
            dockerfile: php/Dockerfile
            target: php
            args:
                PHP_VERSION: ${PHP_VERSION:-7.4.28}
        container_name: ${COMPOSE_PROJECT_NAME}_php
        ports:
            - "9000:9000"
        volumes:
            - ..:/var/www/html:delegated

    composer:
        build:
            <<: *php_build
            target: php_composer
        container_name: ${COMPOSE_PROJECT_NAME}_composer
        volumes:
            - ..:/var/www/html:delegated
        working_dir: /var/www/html
        environment:
            COMPOSER_MEMORY_LIMIT: -1
        entrypoint: ["composer"]

    phpunit:
        build:
            <<: *php_build
            target: php_composer
        container_name: ${COMPOSE_PROJECT_NAME}_phpunit
        volumes:
            - ..:/var/www/html:delegated
        working_dir: /var/www/html
        entrypoint: ["/var/www/html/vendor/bin/phpunit"]

    dev:
        build:
            <<: *php_build
            target: php_developer
        container_name: ${COMPOSE_PROJECT_NAME}_dev
        volumes:
            - ..:/var/www/html:delegated
        working_dir: /var/www/html

    mysql:
        build:
            context: .
            dockerfile: mysql/Dockerfile
            args:
                MYSQL_VERSION: ${MYSQL_VERSION:-5.7.37}
        container_name: ${COMPOSE_PROJECT_NAME}_mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./mysql/lib:/var/lib/mysql:delegated
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql

    pma:
        image: phpmyadmin:latest
        container_name: ${COMPOSE_PROJECT_NAME}_pma
        depends_on:
            - mysql
        restart: always
        ports:
            - "8081:80"
        environment:
            PMA_HOST: mysql
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

    redis:
        image: redis:latest
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        ports:
            - "6379:6379"
        volumes:
            - ./redis/lib:/var/lib/redis:delegated

    git:
        image: alpine/git:latest
        container_name: ${COMPOSE_PROJECT_NAME}_git
        working_dir: /var/www/html
        tty: true
        entrypoint: ["git"]
        volumes:
            - ..:/var/www/html:delegated
            - ./git/.gitconfig:/etc/.gitconfig

    node: &node
        build:
            context: .
            dockerfile: node/Dockerfile
            target: node
            args:
                NODE_VERSION: ${NODE_VERSION:-16.14}
        container_name: ${COMPOSE_PROJECT_NAME}_node
        volumes:
            - ..:/var/www/html:delegated
        working_dir: /var/www/html

    npm:
        <<: *node
        container_name: ${COMPOSE_PROJECT_NAME}_npm
        entrypoint: ["npm"]

    yarn:
        <<: *node
        container_name: ${COMPOSE_PROJECT_NAME}_yarn
        entrypoint: ["yarn"]

    lua:
        build:
            context: .
            dockerfile: lua/Dockerfile
            args:
                LUA_VERSION: ${LUA_VERSION:-5.1}
        container_name: ${COMPOSE_PROJECT_NAME}_lua
        working_dir: /var/www/html
        tty: true
        volumes:
            - ..:/var/www/html:delegated
